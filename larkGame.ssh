#!/bin/bash
# Make the cursor invisible (man terminfo)
tput civis
clear

cat - << EOF
           LARK GAME
Using VIM movement keys to move around the terminal,
Use your shoot function to eliminate all the enemies before they reach you!
   LEFT:   H
   RIGHT:  L
   UP:     K
   DOWN:   J
   FIRE:   R
   QUIT:   Q
                            Press any key.
EOF
read -s -n 1

line0=( 0 30 30 30 30 30 30 30 30 )
line1=( 0 20 20 20 20 20 20 20 20 )
line2=( 0 15 15 15 15 15 15 15 15 )
line3=( 0 10 10 10 10 10 10 10 10 )
line4=( 0 5 5 5 5 5 5 5 5 )
line5=( 0 1 1 1 1 1 1 1 1 )

enemies1=( '\033[1;33m|L|\033[0m' '\033[1;34m|A|\033[0m'
           '\033[1;31m|K|\033[0m'
          '\033[1;35m|I|\033[0m' '\033[1;33m|S|\033[0m' )
enemies2=( '\033[1;34m|F|\033[0m' '\033[1;32m|U|\033[0m'
          '\033[1;34m|N|\033[0m'  )

score=0

# farthest right that the *leftmost* enemy can go to
MAXRIGHT=40
# furthest right that the player can go to
FARRIGHT=70

# Player's current position (x-axis)
ship=30
# shoot column; remains the same even if ship moves
shootX=$ship
# shoot height; 0 means it's ready to fire
shootY=0
# Positive direction to right, Negative to left
direction=1
offscreen=25
bot=25
top=2
MAXtop=10
WAIT=0.7
life=5
lifes=( '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' )

function drawline
{
  # draw a line of aliens; return the index of any alien killed
  # note that only one alien can be killed at any time.
  enemytype=$1
  shift
  let line="$enemytype * 2 + $top"

  enemysonline=`echo $@ | tr ' ' '+' | bc`
  if [ $enemysonline -eq 0 ]; then

    tput cup $line 0
    printf "%80s" " "
    return 0
  fi
  if [ $line -eq $bot ]; then
    tput cup `expr $bot - 4` 6
    trap exit ALRM
    echo "YOU LOSE"
    sleep $WAIT
    stty echo
    tput cvvis
    exit 1
  fi
  declare -a thisline
  thisline=( `echo $@` )

  tput cup 0 0
  printf "Score: %-80d" $score
  killed=0
  # Clear the previous line
  tput cup `expr $line - 1` 0
  printf "%80s" " "

  tput cup $line 0
  printf "%80s" " "
  tput cup $line 0
  printf "%-${offscreen}s"

  # Don't do this calculation in the for loop, it is slow even without expr
  if (( $offscreen % 2 == 0 )); then
    thisenemy=${enemies1[$enemytype]}
  else
    thisenemy=${enemies2[$enemytype]}
  fi

  # there are 4 aliens per line.
  for i in `seq 1 4`
  do
    value=${thisline[$i]}
    avatar=$thisenemy

    if [ $value -gt 0 ]; then
      # detect and mark a collision
      if [ $line -eq $shootY ]; then
        let LEFT="$i *4 + $offscreen - 4"
        let RIGHT="$i * 4 + $offscreen - 1"
        if [ $shootX -ge $LEFT ] && [ $shootX -le $RIGHT ]; then

# checks what letter you want to replace if it is right kills the enemy if it is wrong says wrong letter 
echo "please enter a replacment letter "
while ###[life > 0]
do
read -s -n 1 replace
case "$replace" in
l) if [ "$thisenemy"  ==  "${enemies1[0]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$score + $value))
      shootY=0
break


else
echo "Wrong letter "
life=$life-1
break
fi
;;
a)if [ "$thisenemy" ==  "${enemies1[1]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$score + $value))
      shootY=0
break
else
echo "Wrong letter "
life=$life-1
break
fi;;
k)if [ "$thisenemy" == "${enemies1[3]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
break
else
echo "Wronglife=$life-1 letter "
life=$life-1
break
fi;;
i)if [ "$thisenemy" == "${enemies1[4]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
break
else
echo "Wrong letter "
life=$life-1
fi;;
s)if [ "$thisenemy" == "${enemies1[5]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
else
echo "Wrong letter "
life=$life-1
break
fi;;
f)if [ "$thisenemy" == "${enemies2[0]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
break
else
echo "Wrong letter "
life=$life-1


break
fi;;
u) if [ "$thisenemy" == "${enemies2[1]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
break
else
echo "Wrong letter "
life=$life-1
break
fi;;
n)if [ "$thisenemy" == "${enemies2[2]}" ];
    then
      killed=$i
      avatar='\033[1;31m***\033[0m'
            ((score=$scorre + $value))
      shootY=0
break
else
echo "Wrong letter "
life=$life-1
break
fi;;
 esac
done
        fi
      fi
    fi

    if [ $value -eq 0 ]; then
      printf "    "
    else
        echo -en "${avatar} "
    fi
  done
  return $killed
}
function drawshoot
{
  # move the shoot up one
  if [ $shootY -eq 0 ]; then
    # fell off the top of the screen
    return
  fi

  tput cup $shootY $shootX
  printf " "
  ((shootY=shootY-1))
  tput cup $shootY $shootX
  echo -en "\033[1;31m*\033[0m"
}

function drawship
{

tput cup $bot 0
  printf "%80s" " "
  tput cup $bot $ship
  # Show shoot state by its color in the spaceship
  if [ $shootY -eq 0 ]; then
    col=31
  else
    col=30
  fi
  echo -en "|--\033[1;${col}m*\033[0m--|"
}
function move
{
  # move enemies left or right
  # move shoot, check for collision

  (sleep $WAIT && kill -ALRM $$) &

  # Change direction if hit the side of the screen
  if [ $offscreen -gt $MAXRIGHT ] && [ $direction -eq 1 ]; then
    # speed up if hit the right side of the screen

    direction=-1
    ((top++))
  elif [ $offscreen -eq 0 ] && [ $direction -eq -1 ]; then
    direction=1
  fi

  ((offscreen=offscreen+direction))

  drawline 0 ${line0[@]}
  line0[$?]=0
  drawline 1 ${line1[@]}
  line1[$?]=0
  drawline 2 ${line2[@]}
  line2[$?]=0
  drawline 3 ${line3[@]}
  line3[$?]=0
  drawline 4 ${line4[@]}
  line4[$?]=0
  drawline 5 ${line5[@]}
  line5[$?]=0

  enemiesleft=`echo ${line0[@]} ${line1[@]} ${line2[@]} ${line3[@]}\
         ${line4[@]} ${line5[@]} \
      | tr ' ' '+' | bc`
  if [ $enemiesleft -eq 0 ]; then
    tput cup 5 5
    trap exit ALRM
    echo "YOU WIN"
    sleep $WAIT
    tput echo
    tput cvvis
    echo; echo; echo
    exit 0
  fi

  drawshoot
  drawship
}
trap move ALRM

clear
drawship
# To start enemies moving
#prints hearts

for i in $life
do
printf "${lifes[i]}"
done
move
while :
do
  read -s -n 1 key
  case "$key" in
    h)
       [ $ship -gt 0 ] && ((ship=ship-1))
        drawship
        ;;
    l)
       [ $ship -lt $FARRIGHT ] && ((ship=ship+1))
        drawship
        ;;
    r)
        if [ $shootY -eq 0 ]; then
          let shootX="$ship + 3"
          shootY=$bot



        fi
        ;;
    q)
        echo "Goodbye!"
        tput cvvis
        stty echo
        trap exit ALRM
        sleep $WAIT
        exit 0
        ;;
  esac
done\\\\\\

#!/bin/bash
# Make the cursor invisible (man terminfo)
tput civis
clear

cat - << EOF
           LARK GAME
Using VIM movement keys to move around the terminal,
Replace All the enemies with the ? with the respective letters!
Use your shoot function to eliminate all the enemies before they reach you!
   LEFT:   H
   RIGHT:  L
   UP:     K
   DOWN:   J
   FIRE:   D
  Replace Letter : R (then eneter a letter and press enter 
   QUIT:   Q
                            Press any key.
EOF
read -s -n 1

line0=( 0 30 30 30 30 30 30 30 30 )
line1=( 0 20 20 20 20 20 20 20 20 )
line2=( 0 15 15 15 15 15 15 15 15 )
line3=( 0 10 10 10 10 10 10 10 10 )
line4=( 0 5 5 5 5 5 5 5 5 )
line5=( 0 1 1 1 1 1 1 1 1 )

enemies1=( '\033[1;33m|U|\033[0m' '\033[1;34m|N|\033[0m'
           '\033[1;31m|I|\033[0m'
          '\033[1;35m|X|\033[0m' '\033[1;33m|I|\033[0m' )
enemies2=( '\033[1;34m|S|\033[0m' '\033[1;32m|F|\033[0m'
          '\033[1;34m|U|\033[0m' '\033[1;34m|N|\033[0m' )
enemies3=('\033[1;34m|?A|\033[0m' '\033[1;34m|?D|\033[0m' '\033[1;34m|?Q|\033[0m' '\033[1;34m|?J|\033[0m')
score=0
fcount=4
# farthest right that the leftmost enemy can go to
MAXRIGHT=40
# furthest right that the player can go to
FARRIGHT=70

# Player's current position (x-axis)
ship=30
# shoot column; remains the same even if ship moves
shootX=$ship
replaceY=$ship
# shoot height; 0 means it's ready to fire
shootY=0
replaceY=0
direction=1
offscreen=25
bot=25
top=2
MAXtop=10
WAIT=0.7
life=5
count=0
lifes=( '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' '\033[1;31m<3\033[0m' )

function make_enemies
{
  #makes enemies
  enemytype=$1
  shift
  let line="$enemytype * 2 + $top"

  enemysonline=echo $@ | tr ' ' '+' | bc
  if [ $enemysonline -eq 0 ]; then

    tput cup $line 0
    printf "%80s" " "
    return 0
  fi
  if [ $line -eq $bot ]; then
tput cup expr $bot - 4 6
    trap exit ALRM
    echo "YOU LOSE"
    sleep $WAIT
    stty echo
    tput cvvis
    exit 1
  fi
  declare -a thisline
  thisline=( echo $@ )

  tput cup 0 0
  printf "Score: %-80d" $score
  killed=0
  # Clear the previous line
  tput cup expr $line - 1 0
  printf "%80s" " "

  tput cup $line 0
  printf "%80s" " "
  tput cup $line 0
  printf "%-${offscreen}s"

  # Don't do this calculation in the for loop, it is slow even without expr
  if (( $offscreen % 3 == 0 )); then
    thisenemy=${enemies1[$enemytype]}
elif (($offscreen % 3 == 1 )); then
    thisenemy=${enemies2[$enemytype]}
  else

    thisenemy=${enemies3[$enemytype]}
  fi

  # there are 4 enemies per line.
for i in 1 2 3 4 5
do
value=${thisline[$i]}
    avatar=$thisenemy

    if [ $value -gt 0 ]; then
      # detect and mark a collision
if [ "$thisenemy" == "$enemies3[$enemytype]" ];then
      if [ $line == $replaceY ]; then
          let LEFT="$i * 4 + $offscreen - 4"
          let RIGHT="$i * 4 + $offscreen - 1"
            if [ $replaceX -ge $LEFT ] && [ $replaceX -le $RIGHT ];
            then
                killed=$i
                avatar='\033[1;31m|$replace"|\033[0m'
                ((score=$score + 5))
                replaceY=0
fi
        fi

        else
if [ $line -eq $shootY ]; then
          let LEFT="$i * 4 + $offscreen - 4"
          let RIGHT="$i * 4 + $offscreen - 1"
            if [ $shootX -ge $LEFT ] && [ $shootX -le $RIGHT ];
            then
                killed=$i
                avatar='\033[1;31m***\033[0m'
                ((score=$score + 1))
                shootY=0
                 fi
        fi
      fi
fi
    if [ $value -eq 0 ]; then
      printf "    "
    else
      echo -en "${avatar} "
    fi

done
return $killed

}
function drawshoot
{
  # move the shoot up one
  if [ $shootY -eq 0 ]; then
    # fell off the top of the screen
    return
  fi

  tput cup $shootY $shootX
  printf " "
  ((shootY=shootY-1))
  tput cup $shootY $shootX
  echo -en "\033[1;31m*\033[0m"
}
function draw_replace
{
if [ $replaceY -eq 0 ]; then
    # fell off the top of the screen
    return
  fi
tput cup $replaceY $replaceX
  printf " "
  ((replaceY=replaceY-1))
  tput cup $replaceY $replaceX
  echo -en "\033[1;31m"$replace""
}
function drawship
{

tput cup $bot 0
  printf "%80s" " "
  tput cup $bot $ship
  # Show shoot state by its color in the spaceship

  if [ $shootY -eq 0 ]; then
    col=31
  else
    col=30
  fi
  echo -en "|--\033[1;${col}m*\033[0m--|"
}

function move
{
  # move enemies left or right
# move shoot, check for collision

  (sleep $WAIT && kill -ALRM $$) &

  # Change direction if hit the side of the screen
  if [ $offscreen -gt $MAXRIGHT ] && [ $direction -eq 1 ]; then
    # speed up if hit the right side of the screen

    direction=-1
    ((top++))
  elif [ $offscreen -eq 0 ] && [ $direction -eq -1 ]; then
    direction=1
  fi

  ((offscreen=offscreen+direction))

  make_enemies 0 ${line0[@]}
  line0[$?]=0
  make_enemies 1 ${line1[@]}
  line1[$?]=0
  make_enemies 2 ${line2[@]}
  line2[$?]=0
  make_enemies 3 ${line3[@]}
  line3[$?]=0
make_enemies 4 ${line4[@]}
  line4[$?]=0
  make_enemies 5 ${line5[@]}
  line5[$?]=0

  enemiesleft=echo ${line0[@]} ${line1[@]} ${line2[@]} ${line3[@]}\
         ${line4[@]} ${line5[@]} \
      | tr ' ' '+' | bc
  if [ $enemiesleft -eq 0 ]; then
    tput cup 5 5
    trap exit ALRM
    echo "YOU WIN"
    sleep $WAIT
    tput echo
    tput cvvis
    echo; echo; echo
    exit 0
  fi
draw_replace
  drawshoot
  drawship
}
trap move ALRM

clear
drawship
for i in $life
do
printf "${lifes[i]}"
done
move
while :
do
  read -s -n 1 key
  case "$key" in
    h)
       [ $ship -gt 0 ] && ((ship=ship-1))
        drawship
        ;;
    l)
       [ $ship -lt $FARRIGHT ] && ((ship=ship+1))
        drawship
        ;;
    d)
        if [ $shootY -eq 0 ]; then
          let shootX="$ship + 3"
          shootY=$bot
fi
        ;;
r) #reads the letter to replace
        read  replace
        if [ $replaceY -eq 0 ]; then
          let replaceX="$ship + 3"
          replaceY=$bot



        fi
;;
    q)
        echo "Goodbye!"
        tput cvvis
        stty echo
        trap exit ALRM
        sleep $WAIT
        exit 0
        ;;

 esac
done
